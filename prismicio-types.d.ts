// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type FooterDocumentDataSlicesSlice =
  | MediaSlice
  | MediaTextSlice
  | RichTextSlice;

/**
 * Content for Footer documents
 */
interface FooterDocumentData {
  /**
   * Slice Zone field in *Footer*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: footer.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<FooterDocumentDataSlicesSlice>;
}

/**
 * Footer document from Prismic
 *
 * - **API ID**: `footer`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FooterDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<FooterDocumentData>,
    "footer",
    Lang
  >;

type HeaderDocumentDataSlicesSlice = NavigationItemSlice;

/**
 * Content for Header documents
 */
interface HeaderDocumentData {
  /**
   * Logo field in *Header*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: header.logo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  logo: prismic.ImageField<never>;

  /**
   * Slice Zone field in *Header*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: header.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HeaderDocumentDataSlicesSlice>;
}

/**
 * Header document from Prismic
 *
 * - **API ID**: `header`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HeaderDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HeaderDocumentData>,
    "header",
    Lang
  >;

type PageDocumentDataSlicesSlice =
  | BranchesPortalSlice
  | ResultsSlice
  | NumberedCardsSlice
  | MediaSlice
  | ExpandableRowsSlice
  | TextSliderSlice
  | RichTextSlice
  | CardStackSlice
  | MediaTextSlice
  | HeroSlice
  | MediaSwiperSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Title field in *Page*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

/**
 * Item in *Settings → Company Info*
 */
export interface SettingsDocumentDataCompanyInfoItem {
  /**
   * Info Item field in *Settings → Company Info*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.company_info[].info_item
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  info_item: prismic.RichTextField;
}

/**
 * Item in *Settings → Social*
 */
export interface SettingsDocumentDataSocialItem {
  /**
   * Social Item field in *Settings → Social*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.social[].social_item
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  social_item: prismic.RichTextField;
}

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
  /**
   * Title field in *Settings*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Description field in *Settings*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Logo 1 field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.logo_1
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  logo_1: prismic.ImageField<never>;

  /**
   * Logo 2 field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.logo_2
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  logo_2: prismic.ImageField<never>;

  /**
   * Favicon field in *Settings*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.favicon
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  favicon: prismic.ImageField<never>;

  /**
   * Company Info field in *Settings*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.company_info[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  company_info: prismic.GroupField<
    Simplify<SettingsDocumentDataCompanyInfoItem>
  >;

  /**
   * Social field in *Settings*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: settings.social[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  social: prismic.GroupField<Simplify<SettingsDocumentDataSocialItem>>;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<SettingsDocumentData>,
    "settings",
    Lang
  >;

/**
 * Item in *Work → Secteurs*
 */
export interface WorkDocumentDataSecteursItem {
  /**
   * Label field in *Work → Secteurs*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work.secteurs[].label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  label: prismic.KeyTextField;
}

type WorkDocumentDataSlicesSlice =
  | MediaSlice
  | WorkMediaSlice
  | TextSliderSlice
  | CardStackSlice
  | ResultsSlice
  | NumberedCardsSlice
  | RichTextSlice
  | MediaTextSlice
  | MediaSwiperSlice
  | BeforeAfterSliderSlice;

/**
 * Content for Work documents
 */
interface WorkDocumentData {
  /**
   * Title field in *Work*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Branch field in *Work*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: work.branch
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  branch: prismic.SelectField<"Make It" | "Open" | "Visual Creators">;

  /**
   * Secteurs field in *Work*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work.secteurs[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  secteurs: prismic.GroupField<Simplify<WorkDocumentDataSecteursItem>>;

  /**
   * Cover field in *Work*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: work.cover
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  cover: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Preview video field in *Work*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: work.preview_video
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  preview_video: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Slice Zone field in *Work*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: work.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<WorkDocumentDataSlicesSlice> /**
   * Meta Title field in *Work*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Work*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Work*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: work.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Work document from Prismic
 *
 * - **API ID**: `work`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type WorkDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<WorkDocumentData>, "work", Lang>;

export type AllDocumentTypes =
  | FooterDocument
  | HeaderDocument
  | PageDocument
  | SettingsDocument
  | WorkDocument;

/**
 * Item in *BeforeAfterSlider → Default → Primary → Media 1*
 */
export interface BeforeAfterSliderSliceDefaultPrimaryMedia1Item {
  /**
   * Image field in *BeforeAfterSlider → Default → Primary → Media 1*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.default.primary.media_1[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Video field in *BeforeAfterSlider → Default → Primary → Media 1*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.default.primary.media_1[].video
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  video: prismic.KeyTextField;
}

/**
 * Item in *BeforeAfterSlider → Default → Primary → Media 2*
 */
export interface BeforeAfterSliderSliceDefaultPrimaryMedia2Item {
  /**
   * Image field in *BeforeAfterSlider → Default → Primary → Media 2*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.default.primary.media_2[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Video field in *BeforeAfterSlider → Default → Primary → Media 2*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.default.primary.media_2[].video
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  video: prismic.KeyTextField;
}

/**
 * Item in *BeforeAfterSlider → With Feature → Primary → Media 1*
 */
export interface BeforeAfterSliderSliceWithFeaturePrimaryMedia1Item {
  /**
   * Image field in *BeforeAfterSlider → With Feature → Primary → Media 1*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.media_1[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Video field in *BeforeAfterSlider → With Feature → Primary → Media 1*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.media_1[].video
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  video: prismic.KeyTextField;
}

/**
 * Item in *BeforeAfterSlider → With Feature → Primary → Media 2*
 */
export interface BeforeAfterSliderSliceWithFeaturePrimaryMedia2Item {
  /**
   * Image field in *BeforeAfterSlider → With Feature → Primary → Media 2*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.media_2[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Video field in *BeforeAfterSlider → With Feature → Primary → Media 2*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.media_2[].video
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  video: prismic.KeyTextField;
}

/**
 * Item in *BeforeAfterSlider → With Feature → Primary → Card Feature*
 */
export interface BeforeAfterSliderSliceWithFeaturePrimaryCardFeatureItem {
  /**
   * Title field in *BeforeAfterSlider → With Feature → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.card_feature[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Content field in *BeforeAfterSlider → With Feature → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.card_feature[].content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;

  /**
   * Spread field in *BeforeAfterSlider → With Feature → Primary → Card Feature*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: before_after_slider.withFeature.primary.card_feature[].spread
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  spread: prismic.BooleanField;
}

/**
 * Item in *BeforeAfterSlider → With Feature → Primary → Result Feature*
 */
export interface BeforeAfterSliderSliceWithFeaturePrimaryResultFeatureItem {
  /**
   * Title field in *BeforeAfterSlider → With Feature → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.result_feature[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Content field in *BeforeAfterSlider → With Feature → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.result_feature[].content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;
}

/**
 * Item in *BeforeAfterSlider → With Feature → Primary → RichText Feature*
 */
export interface BeforeAfterSliderSliceWithFeaturePrimaryRichtextFeatureItem {
  /**
   * Text field in *BeforeAfterSlider → With Feature → Primary → RichText Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.richtext_feature[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *BeforeAfterSlider → Default → Primary*
 */
export interface BeforeAfterSliderSliceDefaultPrimary {
  /**
   * Media 1 field in *BeforeAfterSlider → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.default.primary.media_1[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  media_1: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceDefaultPrimaryMedia1Item>
  >;

  /**
   * Media 2 field in *BeforeAfterSlider → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.default.primary.media_2[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  media_2: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceDefaultPrimaryMedia2Item>
  >;

  /**
   * Spacing Top field in *BeforeAfterSlider → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: before_after_slider.default.primary.spacing_top
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  spacing_top: prismic.SelectField<
    "small" | "medium" | "large" | "zero",
    "filled"
  >;

  /**
   * Spacing Bottom field in *BeforeAfterSlider → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: before_after_slider.default.primary.spacing_bottom
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  spacing_bottom: prismic.SelectField<
    "small" | "medium" | "large" | "zero",
    "filled"
  >;

  /**
   * Width field in *BeforeAfterSlider → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: large
   * - **API ID Path**: before_after_slider.default.primary.width
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  width: prismic.SelectField<"large" | "full", "filled">;
}

/**
 * Default variation for BeforeAfterSlider Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BeforeAfterSliderSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<BeforeAfterSliderSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *BeforeAfterSlider → With Feature → Primary*
 */
export interface BeforeAfterSliderSliceWithFeaturePrimary {
  /**
   * Media 1 field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.media_1[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  media_1: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceWithFeaturePrimaryMedia1Item>
  >;

  /**
   * Media 2 field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.media_2[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  media_2: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceWithFeaturePrimaryMedia2Item>
  >;

  /**
   * Card Feature field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.card_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card_feature: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceWithFeaturePrimaryCardFeatureItem>
  >;

  /**
   * Result Feature field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.result_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  result_feature: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceWithFeaturePrimaryResultFeatureItem>
  >;

  /**
   * RichText Feature field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after_slider.withFeature.primary.richtext_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  richtext_feature: prismic.GroupField<
    Simplify<BeforeAfterSliderSliceWithFeaturePrimaryRichtextFeatureItem>
  >;

  /**
   * Spacing Top field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: before_after_slider.withFeature.primary.spacing_top
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  spacing_top: prismic.SelectField<
    "small" | "medium" | "large" | "zero",
    "filled"
  >;

  /**
   * Spacing Bottom field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: before_after_slider.withFeature.primary.spacing_bottom
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  spacing_bottom: prismic.SelectField<
    "small" | "medium" | "large" | "zero",
    "filled"
  >;

  /**
   * Width field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: large
   * - **API ID Path**: before_after_slider.withFeature.primary.width
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  width: prismic.SelectField<"large" | "full", "filled">;

  /**
   * Inverse field in *BeforeAfterSlider → With Feature → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: before_after_slider.withFeature.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * With Feature variation for BeforeAfterSlider Slice
 *
 * - **API ID**: `withFeature`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BeforeAfterSliderSliceWithFeature = prismic.SharedSliceVariation<
  "withFeature",
  Simplify<BeforeAfterSliderSliceWithFeaturePrimary>,
  never
>;

/**
 * Slice variation for *BeforeAfterSlider*
 */
type BeforeAfterSliderSliceVariation =
  | BeforeAfterSliderSliceDefault
  | BeforeAfterSliderSliceWithFeature;

/**
 * BeforeAfterSlider Shared Slice
 *
 * - **API ID**: `before_after_slider`
 * - **Description**: BeforeAfterSlider
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BeforeAfterSliderSlice = prismic.SharedSlice<
  "before_after_slider",
  BeforeAfterSliderSliceVariation
>;

/**
 * Item in *BranchesPortal → Default → Primary → Portal*
 */
export interface BranchesPortalSliceDefaultPrimaryPortalItem {
  /**
   * Image field in *BranchesPortal → Default → Primary → Portal*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: branches_portal.default.primary.portal[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Description field in *BranchesPortal → Default → Primary → Portal*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: branches_portal.default.primary.portal[].description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * Link field in *BranchesPortal → Default → Primary → Portal*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: branches_portal.default.primary.portal[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Primary content in *BranchesPortal → Default → Primary*
 */
export interface BranchesPortalSliceDefaultPrimary {
  /**
   * Heading field in *BranchesPortal → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: branches_portal.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Portal field in *BranchesPortal → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: branches_portal.default.primary.portal[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  portal: prismic.GroupField<
    Simplify<BranchesPortalSliceDefaultPrimaryPortalItem>
  >;
}

/**
 * Default variation for BranchesPortal Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BranchesPortalSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<BranchesPortalSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *BranchesPortal*
 */
type BranchesPortalSliceVariation = BranchesPortalSliceDefault;

/**
 * BranchesPortal Shared Slice
 *
 * - **API ID**: `branches_portal`
 * - **Description**: BranchesPortal
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BranchesPortalSlice = prismic.SharedSlice<
  "branches_portal",
  BranchesPortalSliceVariation
>;

/**
 * Item in *CardStack → Default → Primary → Card*
 */
export interface CardStackSliceDefaultPrimaryCardItem {
  /**
   * Heading field in *CardStack → Default → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.default.primary.card[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Text field in *CardStack → Default → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.default.primary.card[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Item in *CardStack → withImage → Primary → Card*
 */
export interface CardStackSliceWithImagePrimaryCardItem {
  /**
   * Heading field in *CardStack → withImage → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.withImage.primary.card[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Text field in *CardStack → withImage → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.withImage.primary.card[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *CardStack → Default → Primary*
 */
export interface CardStackSliceDefaultPrimary {
  /**
   * Card field in *CardStack → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.default.primary.card[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card: prismic.GroupField<Simplify<CardStackSliceDefaultPrimaryCardItem>>;
}

/**
 * Default variation for CardStack Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardStackSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CardStackSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *CardStack → withImage → Primary*
 */
export interface CardStackSliceWithImagePrimary {
  /**
   * Image field in *CardStack → withImage → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.withImage.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Card field in *CardStack → withImage → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_stack.withImage.primary.card[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card: prismic.GroupField<Simplify<CardStackSliceWithImagePrimaryCardItem>>;

  /**
   * Inverse field in *CardStack → withImage → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: card_stack.withImage.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * withImage variation for CardStack Slice
 *
 * - **API ID**: `withImage`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardStackSliceWithImage = prismic.SharedSliceVariation<
  "withImage",
  Simplify<CardStackSliceWithImagePrimary>,
  never
>;

/**
 * Slice variation for *CardStack*
 */
type CardStackSliceVariation = CardStackSliceDefault | CardStackSliceWithImage;

/**
 * CardStack Shared Slice
 *
 * - **API ID**: `card_stack`
 * - **Description**: CardStack
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type CardStackSlice = prismic.SharedSlice<
  "card_stack",
  CardStackSliceVariation
>;

/**
 * Item in *ExpandableRows → Default → Primary → Row*
 */
export interface ExpandableRowsSliceDefaultPrimaryRowItem {
  /**
   * Heading field in *ExpandableRows → Default → Primary → Row*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.default.primary.row[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Text field in *ExpandableRows → Default → Primary → Row*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.default.primary.row[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Item in *ExpandableRows → Faq → Primary → Row*
 */
export interface ExpandableRowsSliceFaqPrimaryRowItem {
  /**
   * Question field in *ExpandableRows → Faq → Primary → Row*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.faq.primary.row[].question
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  question: prismic.RichTextField;

  /**
   * Answer field in *ExpandableRows → Faq → Primary → Row*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.faq.primary.row[].answer
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  answer: prismic.RichTextField;
}

/**
 * Primary content in *ExpandableRows → Default → Primary*
 */
export interface ExpandableRowsSliceDefaultPrimary {
  /**
   * Heading field in *ExpandableRows → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Row field in *ExpandableRows → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.default.primary.row[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  row: prismic.GroupField<Simplify<ExpandableRowsSliceDefaultPrimaryRowItem>>;
}

/**
 * Default variation for ExpandableRows Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ExpandableRowsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ExpandableRowsSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *ExpandableRows → Faq → Primary*
 */
export interface ExpandableRowsSliceFaqPrimary {
  /**
   * Heading field in *ExpandableRows → Faq → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.faq.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Row field in *ExpandableRows → Faq → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_rows.faq.primary.row[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  row: prismic.GroupField<Simplify<ExpandableRowsSliceFaqPrimaryRowItem>>;
}

/**
 * Faq variation for ExpandableRows Slice
 *
 * - **API ID**: `faq`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ExpandableRowsSliceFaq = prismic.SharedSliceVariation<
  "faq",
  Simplify<ExpandableRowsSliceFaqPrimary>,
  never
>;

/**
 * Slice variation for *ExpandableRows*
 */
type ExpandableRowsSliceVariation =
  | ExpandableRowsSliceDefault
  | ExpandableRowsSliceFaq;

/**
 * ExpandableRows Shared Slice
 *
 * - **API ID**: `expandable_rows`
 * - **Description**: ExpandableRows
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ExpandableRowsSlice = prismic.SharedSlice<
  "expandable_rows",
  ExpandableRowsSliceVariation
>;

/**
 * Item in *Hero → Default → Primary → Text Primary*
 */
export interface HeroSliceDefaultPrimaryTextPrimaryItem {
  /**
   * Text field in *Hero → Default → Primary → Text Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.text_primary[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Item in *Hero → Default → Primary → Text Secondary*
 */
export interface HeroSliceDefaultPrimaryTextSecondaryItem {
  /**
   * text field in *Hero → Default → Primary → Text Secondary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.text_secondary[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Item in *Hero → Default → Primary → Text Tertiary*
 */
export interface HeroSliceDefaultPrimaryTextTertiaryItem {
  /**
   * Text field in *Hero → Default → Primary → Text Tertiary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.text_tertiary[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Item in *Hero → Hero - Sub Page → Primary → Text Blocks*
 */
export interface HeroSliceHeroSubPagePrimaryTextBlocksItem {
  /**
   * Heading field in *Hero → Hero - Sub Page → Primary → Text Blocks*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.heroSubPage.primary.text_blocks[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Body field in *Hero → Hero - Sub Page → Primary → Text Blocks*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.heroSubPage.primary.text_blocks[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Media field in *Hero → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Text Primary field in *Hero → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.text_primary[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  text_primary: prismic.GroupField<
    Simplify<HeroSliceDefaultPrimaryTextPrimaryItem>
  >;

  /**
   * Text Secondary field in *Hero → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.text_secondary[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  text_secondary: prismic.GroupField<
    Simplify<HeroSliceDefaultPrimaryTextSecondaryItem>
  >;

  /**
   * Text Tertiary field in *Hero → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.text_tertiary[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  text_tertiary: prismic.GroupField<
    Simplify<HeroSliceDefaultPrimaryTextTertiaryItem>
  >;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Hero → Hero - Sub Page → Primary*
 */
export interface HeroSliceHeroSubPagePrimary {
  /**
   * Media field in *Hero → Hero - Sub Page → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: hero.heroSubPage.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Text field in *Hero → Hero - Sub Page → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.heroSubPage.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Text Blocks field in *Hero → Hero - Sub Page → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.heroSubPage.primary.text_blocks[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  text_blocks: prismic.GroupField<
    Simplify<HeroSliceHeroSubPagePrimaryTextBlocksItem>
  >;
}

/**
 * Hero - Sub Page variation for Hero Slice
 *
 * - **API ID**: `heroSubPage`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSliceHeroSubPage = prismic.SharedSliceVariation<
  "heroSubPage",
  Simplify<HeroSliceHeroSubPagePrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault | HeroSliceHeroSubPage;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Item in *LargeHeading → Default → Primary → Rich Text*
 */
export interface LargeTextSliceDefaultPrimaryRichTextItem {
  /**
   * Text field in *LargeHeading → Default → Primary → Rich Text*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: large_text.default.primary.rich_text[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *LargeHeading → Default → Primary*
 */
export interface LargeTextSliceDefaultPrimary {
  /**
   * Rich Text field in *LargeHeading → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: large_text.default.primary.rich_text[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  rich_text: prismic.GroupField<
    Simplify<LargeTextSliceDefaultPrimaryRichTextItem>
  >;

  /**
   * Spacing top field in *LargeHeading → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: large_text.default.primary.spacing_top
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  spacing_top: prismic.SelectField<
    "small" | "medium" | "large" | "zero",
    "filled"
  >;

  /**
   * Spacing bottom field in *LargeHeading → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: small
   * - **API ID Path**: large_text.default.primary.spacing_bottom
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  spacing_bottom: prismic.SelectField<
    "small" | "medium" | "large" | "zero",
    "filled"
  >;

  /**
   * Align X field in *LargeHeading → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: left
   * - **API ID Path**: large_text.default.primary.align_x
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  align_x: prismic.SelectField<"left" | "center", "filled">;

  /**
   * Width field in *LargeHeading → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: full
   * - **API ID Path**: large_text.default.primary.width
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  width: prismic.SelectField<"full" | "large", "filled">;
}

/**
 * Default variation for LargeHeading Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type LargeTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<LargeTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *LargeHeading*
 */
type LargeTextSliceVariation = LargeTextSliceDefault;

/**
 * LargeHeading Shared Slice
 *
 * - **API ID**: `large_text`
 * - **Description**: LargeText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type LargeTextSlice = prismic.SharedSlice<
  "large_text",
  LargeTextSliceVariation
>;

/**
 * Item in *Media → With List → Primary → List Container*
 */
export interface MediaSliceWithListPrimaryListContainerItem {
  /**
   * List field in *Media → With List → Primary → List Container*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media.withList.primary.list_container[].list
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  list: prismic.RichTextField;
}

/**
 * Primary content in *Media → Default → Primary*
 */
export interface MediaSliceDefaultPrimary {
  /**
   * Media field in *Media → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: media.default.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * Default variation for Media Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<MediaSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Media → With List → Primary*
 */
export interface MediaSliceWithListPrimary {
  /**
   * Media field in *Media → With List → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: media.withList.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * List Container field in *Media → With List → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: media.withList.primary.list_container[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  list_container: prismic.GroupField<
    Simplify<MediaSliceWithListPrimaryListContainerItem>
  >;
}

/**
 * With List variation for Media Slice
 *
 * - **API ID**: `withList`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaSliceWithList = prismic.SharedSliceVariation<
  "withList",
  Simplify<MediaSliceWithListPrimary>,
  never
>;

/**
 * Slice variation for *Media*
 */
type MediaSliceVariation = MediaSliceDefault | MediaSliceWithList;

/**
 * Media Shared Slice
 *
 * - **API ID**: `media`
 * - **Description**: Media
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaSlice = prismic.SharedSlice<"media", MediaSliceVariation>;

/**
 * Primary content in *MediaSwiper → Default → Primary*
 */
export interface MediaSwiperSliceDefaultPrimary {
  /**
   * Heading field in *MediaSwiper → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_swiper.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Branch field in *MediaSwiper → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: All
   * - **API ID Path**: media_swiper.default.primary.branch
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  branch: prismic.SelectField<
    "All" | "Make It" | "Open" | "Visual Creators",
    "filled"
  >;

  /**
   * Work items field in *MediaSwiper → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: media_swiper.default.primary.work_items
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  work_items: prismic.ContentRelationshipField<"work">;
}

/**
 * Default variation for MediaSwiper Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaSwiperSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<MediaSwiperSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *MediaSwiper*
 */
type MediaSwiperSliceVariation = MediaSwiperSliceDefault;

/**
 * MediaSwiper Shared Slice
 *
 * - **API ID**: `media_swiper`
 * - **Description**: MediaSwiper
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaSwiperSlice = prismic.SharedSlice<
  "media_swiper",
  MediaSwiperSliceVariation
>;

/**
 * Item in *MediaText → Default → Primary → Text blocks*
 */
export interface MediaTextSliceDefaultPrimaryTextBlocksItem {
  /**
   * Heading field in *MediaText → Default → Primary → Text blocks*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_text.default.primary.text_blocks[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *MediaText → Default → Primary → Text blocks*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: media_text.default.primary.text_blocks[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Primary content in *MediaText → Default → Primary*
 */
export interface MediaTextSliceDefaultPrimary {
  /**
   * Media field in *MediaText → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: media_text.default.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Text blocks field in *MediaText → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: media_text.default.primary.text_blocks[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  text_blocks: prismic.GroupField<
    Simplify<MediaTextSliceDefaultPrimaryTextBlocksItem>
  >;
}

/**
 * Default variation for MediaText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<MediaTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *MediaText*
 */
type MediaTextSliceVariation = MediaTextSliceDefault;

/**
 * MediaText Shared Slice
 *
 * - **API ID**: `media_text`
 * - **Description**: MediaText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MediaTextSlice = prismic.SharedSlice<
  "media_text",
  MediaTextSliceVariation
>;

/**
 * Item in *NavigationItem → With sub menu → Primary → Sub menu*
 */
export interface NavigationItemSliceWithSubMenuPrimarySubMenuItem {
  /**
   * Sub label field in *NavigationItem → With sub menu → Primary → Sub menu*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Sub label
   * - **API ID Path**: navigation_item.withSubMenu.primary.sub_menu[].sub_label
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  sub_label: prismic.RichTextField;

  /**
   * Sub link field in *NavigationItem → With sub menu → Primary → Sub menu*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Sub link
   * - **API ID Path**: navigation_item.withSubMenu.primary.sub_menu[].sub_link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  sub_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Primary content in *NavigationItem → Default → Primary*
 */
export interface NavigationItemSliceDefaultPrimary {
  /**
   * Label field in *NavigationItem → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_item.default.primary.label
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  label: prismic.RichTextField;

  /**
   * Link field in *NavigationItem → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_item.default.primary.link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Default variation for NavigationItem Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationItemSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<NavigationItemSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *NavigationItem → With sub menu → Primary*
 */
export interface NavigationItemSliceWithSubMenuPrimary {
  /**
   * Label field in *NavigationItem → With sub menu → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_item.withSubMenu.primary.label
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  label: prismic.RichTextField;

  /**
   * Link field in *NavigationItem → With sub menu → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_item.withSubMenu.primary.link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;

  /**
   * Sub menu field in *NavigationItem → With sub menu → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: navigation_item.withSubMenu.primary.sub_menu[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  sub_menu: prismic.GroupField<
    Simplify<NavigationItemSliceWithSubMenuPrimarySubMenuItem>
  >;
}

/**
 * With sub menu variation for NavigationItem Slice
 *
 * - **API ID**: `withSubMenu`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationItemSliceWithSubMenu = prismic.SharedSliceVariation<
  "withSubMenu",
  Simplify<NavigationItemSliceWithSubMenuPrimary>,
  never
>;

/**
 * Slice variation for *NavigationItem*
 */
type NavigationItemSliceVariation =
  | NavigationItemSliceDefault
  | NavigationItemSliceWithSubMenu;

/**
 * NavigationItem Shared Slice
 *
 * - **API ID**: `navigation_item`
 * - **Description**: NavigationItem
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NavigationItemSlice = prismic.SharedSlice<
  "navigation_item",
  NavigationItemSliceVariation
>;

/**
 * Item in *NumberedCards → Default → Primary → Card*
 */
export interface NumberedCardsSliceDefaultPrimaryCardItem {
  /**
   * Heading field in *NumberedCards → Default → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.default.primary.card[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *NumberedCards → Default → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.default.primary.card[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Item in *NumberedCards → With Feature → Primary → Card*
 */
export interface NumberedCardsSliceWithFeaturePrimaryCardItem {
  /**
   * Title field in *NumberedCards → With Feature → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.card[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Content field in *NumberedCards → With Feature → Primary → Card*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.card[].content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;
}

/**
 * Item in *NumberedCards → With Feature → Primary → Feature*
 */
export interface NumberedCardsSliceWithFeaturePrimaryFeatureItem {
  /**
   * Image field in *NumberedCards → With Feature → Primary → Feature*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.feature[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text field in *NumberedCards → With Feature → Primary → Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.feature[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Video field in *NumberedCards → With Feature → Primary → Feature*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.feature[].video
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  video: prismic.KeyTextField;
}

/**
 * Primary content in *NumberedCards → Default → Primary*
 */
export interface NumberedCardsSliceDefaultPrimary {
  /**
   * Card field in *NumberedCards → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.default.primary.card[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card: prismic.GroupField<Simplify<NumberedCardsSliceDefaultPrimaryCardItem>>;
}

/**
 * Default variation for NumberedCards Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NumberedCardsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<NumberedCardsSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *NumberedCards → With Feature → Primary*
 */
export interface NumberedCardsSliceWithFeaturePrimary {
  /**
   * Card field in *NumberedCards → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.card[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card: prismic.GroupField<
    Simplify<NumberedCardsSliceWithFeaturePrimaryCardItem>
  >;

  /**
   * Feature field in *NumberedCards → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: numbered_cards.withFeature.primary.feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  feature: prismic.GroupField<
    Simplify<NumberedCardsSliceWithFeaturePrimaryFeatureItem>
  >;

  /**
   * Inverse field in *NumberedCards → With Feature → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: numbered_cards.withFeature.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * With Feature variation for NumberedCards Slice
 *
 * - **API ID**: `withFeature`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NumberedCardsSliceWithFeature = prismic.SharedSliceVariation<
  "withFeature",
  Simplify<NumberedCardsSliceWithFeaturePrimary>,
  never
>;

/**
 * Slice variation for *NumberedCards*
 */
type NumberedCardsSliceVariation =
  | NumberedCardsSliceDefault
  | NumberedCardsSliceWithFeature;

/**
 * NumberedCards Shared Slice
 *
 * - **API ID**: `numbered_cards`
 * - **Description**: NumberedCards
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type NumberedCardsSlice = prismic.SharedSlice<
  "numbered_cards",
  NumberedCardsSliceVariation
>;

/**
 * Item in *Results → Default → Primary → Result*
 */
export interface ResultsSliceDefaultPrimaryResultItem {
  /**
   * Title field in *Results → Default → Primary → Result*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: results.default.primary.result[].title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * Content field in *Results → Default → Primary → Result*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: results.default.primary.result[].content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;
}

/**
 * Primary content in *Results → Default → Primary*
 */
export interface ResultsSliceDefaultPrimary {
  /**
   * Result field in *Results → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: results.default.primary.result[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  result: prismic.GroupField<Simplify<ResultsSliceDefaultPrimaryResultItem>>;
}

/**
 * Default variation for Results Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ResultsSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ResultsSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Results*
 */
type ResultsSliceVariation = ResultsSliceDefault;

/**
 * Results Shared Slice
 *
 * - **API ID**: `results`
 * - **Description**: Results
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ResultsSlice = prismic.SharedSlice<
  "results",
  ResultsSliceVariation
>;

/**
 * Item in *RichText → Default → Primary → Text blocks*
 */
export interface RichTextSliceDefaultPrimaryTextBlocksItem {
  /**
   * Text field in *RichText → Default → Primary → Text blocks*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.text_blocks[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * Button field in *RichText → Default → Primary → Text blocks*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Label
   * - **API ID Path**: rich_text.default.primary.text_blocks[].button
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  button: prismic.Repeatable<
    prismic.LinkField<
      string,
      string,
      unknown,
      prismic.FieldState,
      "Primary" | "Secondary"
    >
  >;
}

/**
 * Primary content in *RichText → Default → Primary*
 */
export interface RichTextSliceDefaultPrimary {
  /**
   * Heading field in *RichText → Default → Primary*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Text blocks field in *RichText → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.text_blocks[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  text_blocks: prismic.GroupField<
    Simplify<RichTextSliceDefaultPrimaryTextBlocksItem>
  >;
}

/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RichTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<RichTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *RichText*
 */
type RichTextSliceVariation = RichTextSliceDefault;

/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RichTextSlice = prismic.SharedSlice<
  "rich_text",
  RichTextSliceVariation
>;

/**
 * Item in *TextSlider → Default → Primary → Slider Text*
 */
export interface TextSliderSliceDefaultPrimarySliderTextItem {
  /**
   * Text field in *TextSlider → Default → Primary → Slider Text*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slider.default.primary.slider_text[].text
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  text: prismic.KeyTextField;
}

/**
 * Item in *TextSlider → ImageSlider → Primary → Slider image*
 */
export interface TextSliderSliceImageSliderPrimarySliderImageItem {
  /**
   * Image field in *TextSlider → ImageSlider → Primary → Slider image*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slider.imageSlider.primary.slider_image[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Primary content in *TextSlider → Default → Primary*
 */
export interface TextSliderSliceDefaultPrimary {
  /**
   * Slider Text field in *TextSlider → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slider.default.primary.slider_text[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  slider_text: prismic.GroupField<
    Simplify<TextSliderSliceDefaultPrimarySliderTextItem>
  >;

  /**
   * Inverse field in *TextSlider → Default → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: text_slider.default.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * Default variation for TextSlider Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliderSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextSliderSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *TextSlider → ImageSlider → Primary*
 */
export interface TextSliderSliceImageSliderPrimary {
  /**
   * Slider image field in *TextSlider → ImageSlider → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: text_slider.imageSlider.primary.slider_image[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  slider_image: prismic.GroupField<
    Simplify<TextSliderSliceImageSliderPrimarySliderImageItem>
  >;

  /**
   * Inverse field in *TextSlider → ImageSlider → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: text_slider.imageSlider.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * ImageSlider variation for TextSlider Slice
 *
 * - **API ID**: `imageSlider`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliderSliceImageSlider = prismic.SharedSliceVariation<
  "imageSlider",
  Simplify<TextSliderSliceImageSliderPrimary>,
  never
>;

/**
 * Slice variation for *TextSlider*
 */
type TextSliderSliceVariation =
  | TextSliderSliceDefault
  | TextSliderSliceImageSlider;

/**
 * TextSlider Shared Slice
 *
 * - **API ID**: `text_slider`
 * - **Description**: TextSlider
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextSliderSlice = prismic.SharedSlice<
  "text_slider",
  TextSliderSliceVariation
>;

/**
 * Item in *WorkMedia → Columns → Primary → Media blocks*
 */
export interface WorkMediaSliceColumnsPrimaryMediaBlocksItem {
  /**
   * Media field in *WorkMedia → Columns → Primary → Media blocks*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: work_media.columns.primary.media_blocks[].media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * Item in *WorkMedia → Columns → Primary → Card Feature*
 */
export interface WorkMediaSliceColumnsPrimaryCardFeatureItem {
  /**
   * Heading field in *WorkMedia → Columns → Primary → Card Feature*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.card_feature[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Body field in *WorkMedia → Columns → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.card_feature[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Item in *WorkMedia → Columns → Primary → Result Feature*
 */
export interface WorkMediaSliceColumnsPrimaryResultFeatureItem {
  /**
   * Heading field in *WorkMedia → Columns → Primary → Result Feature*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.result_feature[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.TitleField;

  /**
   * Body field in *WorkMedia → Columns → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.result_feature[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Item in *WorkMedia → With Feature → Primary → Card Feature*
 */
export interface WorkMediaSliceWithFeaturePrimaryCardFeatureItem {
  /**
   * Heading field in *WorkMedia → With Feature → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.card_feature[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *WorkMedia → With Feature → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.card_feature[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;

  /**
   * Spread field in *WorkMedia → With Feature → Primary → Card Feature*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: work_media.withFeature.primary.card_feature[].spread
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  spread: prismic.BooleanField;
}

/**
 * Item in *WorkMedia → With Feature → Primary → Result Feature*
 */
export interface WorkMediaSliceWithFeaturePrimaryResultFeatureItem {
  /**
   * Heading field in *WorkMedia → With Feature → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.result_feature[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *WorkMedia → With Feature → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.result_feature[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Item in *WorkMedia → With Feature → Primary → RichText Feature*
 */
export interface WorkMediaSliceWithFeaturePrimaryRichtextFeatureItem {
  /**
   * Text field in *WorkMedia → With Feature → Primary → RichText Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.richtext_feature[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Item in *WorkMedia → Media paysage → Primary → Card Feature*
 */
export interface WorkMediaSliceMediaPaysagePrimaryCardFeatureItem {
  /**
   * Heading field in *WorkMedia → Media paysage → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.card_feature[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *WorkMedia → Media paysage → Primary → Card Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.card_feature[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;

  /**
   * Spread field in *WorkMedia → Media paysage → Primary → Card Feature*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: work_media.mediaPaysage.primary.card_feature[].spread
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  spread: prismic.BooleanField;
}

/**
 * Item in *WorkMedia → Media paysage → Primary → Result Feature*
 */
export interface WorkMediaSliceMediaPaysagePrimaryResultFeatureItem {
  /**
   * Heading field in *WorkMedia → Media paysage → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.result_feature[].heading
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading: prismic.RichTextField;

  /**
   * Body field in *WorkMedia → Media paysage → Primary → Result Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.result_feature[].body
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;
}

/**
 * Item in *WorkMedia → Media paysage → Primary → RichText Feature*
 */
export interface WorkMediaSliceMediaPaysagePrimaryRichtextFeatureItem {
  /**
   * Text field in *WorkMedia → Media paysage → Primary → RichText Feature*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.richtext_feature[].text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *WorkMedia → Default → Primary*
 */
export interface WorkMediaSliceDefaultPrimary {
  /**
   * Media field in *WorkMedia → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: work_media.default.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * Default variation for WorkMedia Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type WorkMediaSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<WorkMediaSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *WorkMedia → Columns → Primary*
 */
export interface WorkMediaSliceColumnsPrimary {
  /**
   * Media blocks field in *WorkMedia → Columns → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.media_blocks[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  media_blocks: prismic.GroupField<
    Simplify<WorkMediaSliceColumnsPrimaryMediaBlocksItem>
  >;

  /**
   * Card Feature field in *WorkMedia → Columns → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.card_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card_feature: prismic.GroupField<
    Simplify<WorkMediaSliceColumnsPrimaryCardFeatureItem>
  >;

  /**
   * Result Feature field in *WorkMedia → Columns → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.columns.primary.result_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  result_feature: prismic.GroupField<
    Simplify<WorkMediaSliceColumnsPrimaryResultFeatureItem>
  >;
}

/**
 * Columns variation for WorkMedia Slice
 *
 * - **API ID**: `columns`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type WorkMediaSliceColumns = prismic.SharedSliceVariation<
  "columns",
  Simplify<WorkMediaSliceColumnsPrimary>,
  never
>;

/**
 * Primary content in *WorkMedia → With Feature → Primary*
 */
export interface WorkMediaSliceWithFeaturePrimary {
  /**
   * Media field in *WorkMedia → With Feature → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: work_media.withFeature.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Card Feature field in *WorkMedia → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.card_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card_feature: prismic.GroupField<
    Simplify<WorkMediaSliceWithFeaturePrimaryCardFeatureItem>
  >;

  /**
   * Result Feature field in *WorkMedia → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.result_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  result_feature: prismic.GroupField<
    Simplify<WorkMediaSliceWithFeaturePrimaryResultFeatureItem>
  >;

  /**
   * RichText Feature field in *WorkMedia → With Feature → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.withFeature.primary.richtext_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  richtext_feature: prismic.GroupField<
    Simplify<WorkMediaSliceWithFeaturePrimaryRichtextFeatureItem>
  >;

  /**
   * Inverse field in *WorkMedia → With Feature → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: work_media.withFeature.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * With Feature variation for WorkMedia Slice
 *
 * - **API ID**: `withFeature`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type WorkMediaSliceWithFeature = prismic.SharedSliceVariation<
  "withFeature",
  Simplify<WorkMediaSliceWithFeaturePrimary>,
  never
>;

/**
 * Primary content in *WorkMedia → Media paysage → Primary*
 */
export interface WorkMediaSliceMediaPaysagePrimary {
  /**
   * Media field in *WorkMedia → Media paysage → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Alt text
   * - **API ID Path**: work_media.mediaPaysage.primary.media
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  media: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Card Feature field in *WorkMedia → Media paysage → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.card_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  card_feature: prismic.GroupField<
    Simplify<WorkMediaSliceMediaPaysagePrimaryCardFeatureItem>
  >;

  /**
   * Result Feature field in *WorkMedia → Media paysage → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.result_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  result_feature: prismic.GroupField<
    Simplify<WorkMediaSliceMediaPaysagePrimaryResultFeatureItem>
  >;

  /**
   * RichText Feature field in *WorkMedia → Media paysage → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: work_media.mediaPaysage.primary.richtext_feature[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  richtext_feature: prismic.GroupField<
    Simplify<WorkMediaSliceMediaPaysagePrimaryRichtextFeatureItem>
  >;

  /**
   * Inverse field in *WorkMedia → Media paysage → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: work_media.mediaPaysage.primary.inverse
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  inverse: prismic.BooleanField;
}

/**
 * Media paysage variation for WorkMedia Slice
 *
 * - **API ID**: `mediaPaysage`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type WorkMediaSliceMediaPaysage = prismic.SharedSliceVariation<
  "mediaPaysage",
  Simplify<WorkMediaSliceMediaPaysagePrimary>,
  never
>;

/**
 * Slice variation for *WorkMedia*
 */
type WorkMediaSliceVariation =
  | WorkMediaSliceDefault
  | WorkMediaSliceColumns
  | WorkMediaSliceWithFeature
  | WorkMediaSliceMediaPaysage;

/**
 * WorkMedia Shared Slice
 *
 * - **API ID**: `work_media`
 * - **Description**: WorkMedia
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type WorkMediaSlice = prismic.SharedSlice<
  "work_media",
  WorkMediaSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      FooterDocument,
      FooterDocumentData,
      FooterDocumentDataSlicesSlice,
      HeaderDocument,
      HeaderDocumentData,
      HeaderDocumentDataSlicesSlice,
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      SettingsDocument,
      SettingsDocumentData,
      SettingsDocumentDataCompanyInfoItem,
      SettingsDocumentDataSocialItem,
      WorkDocument,
      WorkDocumentData,
      WorkDocumentDataSecteursItem,
      WorkDocumentDataSlicesSlice,
      AllDocumentTypes,
      BeforeAfterSliderSlice,
      BeforeAfterSliderSliceDefaultPrimaryMedia1Item,
      BeforeAfterSliderSliceDefaultPrimaryMedia2Item,
      BeforeAfterSliderSliceDefaultPrimary,
      BeforeAfterSliderSliceWithFeaturePrimaryMedia1Item,
      BeforeAfterSliderSliceWithFeaturePrimaryMedia2Item,
      BeforeAfterSliderSliceWithFeaturePrimaryCardFeatureItem,
      BeforeAfterSliderSliceWithFeaturePrimaryResultFeatureItem,
      BeforeAfterSliderSliceWithFeaturePrimaryRichtextFeatureItem,
      BeforeAfterSliderSliceWithFeaturePrimary,
      BeforeAfterSliderSliceVariation,
      BeforeAfterSliderSliceDefault,
      BeforeAfterSliderSliceWithFeature,
      BranchesPortalSlice,
      BranchesPortalSliceDefaultPrimaryPortalItem,
      BranchesPortalSliceDefaultPrimary,
      BranchesPortalSliceVariation,
      BranchesPortalSliceDefault,
      CardStackSlice,
      CardStackSliceDefaultPrimaryCardItem,
      CardStackSliceDefaultPrimary,
      CardStackSliceWithImagePrimaryCardItem,
      CardStackSliceWithImagePrimary,
      CardStackSliceVariation,
      CardStackSliceDefault,
      CardStackSliceWithImage,
      ExpandableRowsSlice,
      ExpandableRowsSliceDefaultPrimaryRowItem,
      ExpandableRowsSliceDefaultPrimary,
      ExpandableRowsSliceFaqPrimaryRowItem,
      ExpandableRowsSliceFaqPrimary,
      ExpandableRowsSliceVariation,
      ExpandableRowsSliceDefault,
      ExpandableRowsSliceFaq,
      HeroSlice,
      HeroSliceDefaultPrimaryTextPrimaryItem,
      HeroSliceDefaultPrimaryTextSecondaryItem,
      HeroSliceDefaultPrimaryTextTertiaryItem,
      HeroSliceDefaultPrimary,
      HeroSliceHeroSubPagePrimaryTextBlocksItem,
      HeroSliceHeroSubPagePrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      HeroSliceHeroSubPage,
      LargeTextSlice,
      LargeTextSliceDefaultPrimaryRichTextItem,
      LargeTextSliceDefaultPrimary,
      LargeTextSliceVariation,
      LargeTextSliceDefault,
      MediaSlice,
      MediaSliceDefaultPrimary,
      MediaSliceWithListPrimaryListContainerItem,
      MediaSliceWithListPrimary,
      MediaSliceVariation,
      MediaSliceDefault,
      MediaSliceWithList,
      MediaSwiperSlice,
      MediaSwiperSliceDefaultPrimary,
      MediaSwiperSliceVariation,
      MediaSwiperSliceDefault,
      MediaTextSlice,
      MediaTextSliceDefaultPrimaryTextBlocksItem,
      MediaTextSliceDefaultPrimary,
      MediaTextSliceVariation,
      MediaTextSliceDefault,
      NavigationItemSlice,
      NavigationItemSliceDefaultPrimary,
      NavigationItemSliceWithSubMenuPrimarySubMenuItem,
      NavigationItemSliceWithSubMenuPrimary,
      NavigationItemSliceVariation,
      NavigationItemSliceDefault,
      NavigationItemSliceWithSubMenu,
      NumberedCardsSlice,
      NumberedCardsSliceDefaultPrimaryCardItem,
      NumberedCardsSliceDefaultPrimary,
      NumberedCardsSliceWithFeaturePrimaryCardItem,
      NumberedCardsSliceWithFeaturePrimaryFeatureItem,
      NumberedCardsSliceWithFeaturePrimary,
      NumberedCardsSliceVariation,
      NumberedCardsSliceDefault,
      NumberedCardsSliceWithFeature,
      ResultsSlice,
      ResultsSliceDefaultPrimaryResultItem,
      ResultsSliceDefaultPrimary,
      ResultsSliceVariation,
      ResultsSliceDefault,
      RichTextSlice,
      RichTextSliceDefaultPrimaryTextBlocksItem,
      RichTextSliceDefaultPrimary,
      RichTextSliceVariation,
      RichTextSliceDefault,
      TextSliderSlice,
      TextSliderSliceDefaultPrimarySliderTextItem,
      TextSliderSliceDefaultPrimary,
      TextSliderSliceImageSliderPrimarySliderImageItem,
      TextSliderSliceImageSliderPrimary,
      TextSliderSliceVariation,
      TextSliderSliceDefault,
      TextSliderSliceImageSlider,
      WorkMediaSlice,
      WorkMediaSliceDefaultPrimary,
      WorkMediaSliceColumnsPrimaryMediaBlocksItem,
      WorkMediaSliceColumnsPrimaryCardFeatureItem,
      WorkMediaSliceColumnsPrimaryResultFeatureItem,
      WorkMediaSliceColumnsPrimary,
      WorkMediaSliceWithFeaturePrimaryCardFeatureItem,
      WorkMediaSliceWithFeaturePrimaryResultFeatureItem,
      WorkMediaSliceWithFeaturePrimaryRichtextFeatureItem,
      WorkMediaSliceWithFeaturePrimary,
      WorkMediaSliceMediaPaysagePrimaryCardFeatureItem,
      WorkMediaSliceMediaPaysagePrimaryResultFeatureItem,
      WorkMediaSliceMediaPaysagePrimaryRichtextFeatureItem,
      WorkMediaSliceMediaPaysagePrimary,
      WorkMediaSliceVariation,
      WorkMediaSliceDefault,
      WorkMediaSliceColumns,
      WorkMediaSliceWithFeature,
      WorkMediaSliceMediaPaysage,
    };
  }
}
